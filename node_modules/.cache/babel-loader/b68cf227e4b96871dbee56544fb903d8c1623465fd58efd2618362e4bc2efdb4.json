{"ast":null,"code":"import _defineProperty from \"/home/shubham/Desktop/seven-up-seven-down/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { ContractSpec } from 'stellar-sdk';\nimport { Buffer } from \"buffer\";\nimport { AssembledTransaction } from './assembled-tx.js';\nexport * from './assembled-tx.js';\nexport * from './method-options.js';\nif (typeof window !== 'undefined') {\n  //@ts-ignore Buffer exists\n  window.Buffer = window.Buffer || Buffer;\n}\nexport const networks = {\n  futurenet: {\n    networkPassphrase: \"Test SDF Future Network ; October 2022\",\n    contractId: \"CAHX5NUQCHW77UOLCIOKPY65XJOCJSM3BCZRM57AY4EQYZFAUQGWEAKI\"\n  }\n};\n/**\n    \n    */\nexport const Errors = {};\nexport class Contract {\n  constructor(_options) {\n    var _this = this;\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"spec\", void 0);\n    _defineProperty(this, \"parsers\", {\n      play: result => this.spec.funcResToNative(\"play\", result)\n    });\n    _defineProperty(this, \"txFromJSON\", json => {\n      const {\n        method,\n        ...tx\n      } = JSON.parse(json);\n      return AssembledTransaction.fromJSON({\n        ...this.options,\n        method,\n        parseResultXdr: this.parsers[method]\n      }, tx);\n    });\n    _defineProperty(this, \"fromJSON\", {\n      play: this.txFromJSON\n    });\n    /**\n    * Construct and simulate a play transaction. Returns an `AssembledTransaction` object which will have a `result` field containing the result of the simulation. If this transaction changes contract state, you will need to call `signAndSend()` on the returned object.\n    */\n    _defineProperty(this, \"play\", async function (_ref) {\n      let {\n        prediction\n      } = _ref;\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return await AssembledTransaction.fromSimulation({\n        method: 'play',\n        args: _this.spec.funcArgsToScVals(\"play\", {\n          prediction\n        }),\n        ...options,\n        ..._this.options,\n        errorTypes: Errors,\n        parseResultXdr: _this.parsers['play']\n      });\n    });\n    this.options = _options;\n    this.spec = new ContractSpec([\"AAAAAAAAAAAAAAAEcGxheQAAAAEAAAAAAAAACnByZWRpY3Rpb24AAAAAABEAAAABAAAD6gAAABE=\"]);\n  }\n}","map":{"version":3,"names":["ContractSpec","Buffer","AssembledTransaction","window","networks","futurenet","networkPassphrase","contractId","Errors","Contract","constructor","options","_this","_defineProperty","play","result","spec","funcResToNative","json","method","tx","JSON","parse","fromJSON","parseResultXdr","parsers","txFromJSON","_ref","prediction","arguments","length","undefined","fromSimulation","args","funcArgsToScVals","errorTypes"],"sources":["/home/shubham/Desktop/seven-up-seven-down/node_modules/seven-up-seven-down/dist/esm/index.js"],"sourcesContent":["import { ContractSpec } from 'stellar-sdk';\nimport { Buffer } from \"buffer\";\nimport { AssembledTransaction } from './assembled-tx.js';\nexport * from './assembled-tx.js';\nexport * from './method-options.js';\nif (typeof window !== 'undefined') {\n    //@ts-ignore Buffer exists\n    window.Buffer = window.Buffer || Buffer;\n}\nexport const networks = {\n    futurenet: {\n        networkPassphrase: \"Test SDF Future Network ; October 2022\",\n        contractId: \"CAHX5NUQCHW77UOLCIOKPY65XJOCJSM3BCZRM57AY4EQYZFAUQGWEAKI\",\n    }\n};\n/**\n    \n    */\nexport const Errors = {};\nexport class Contract {\n    options;\n    spec;\n    constructor(options) {\n        this.options = options;\n        this.spec = new ContractSpec([\n            \"AAAAAAAAAAAAAAAEcGxheQAAAAEAAAAAAAAACnByZWRpY3Rpb24AAAAAABEAAAABAAAD6gAAABE=\"\n        ]);\n    }\n    parsers = {\n        play: (result) => this.spec.funcResToNative(\"play\", result)\n    };\n    txFromJSON = (json) => {\n        const { method, ...tx } = JSON.parse(json);\n        return AssembledTransaction.fromJSON({\n            ...this.options,\n            method,\n            parseResultXdr: this.parsers[method],\n        }, tx);\n    };\n    fromJSON = {\n        play: (this.txFromJSON)\n    };\n    /**\n* Construct and simulate a play transaction. Returns an `AssembledTransaction` object which will have a `result` field containing the result of the simulation. If this transaction changes contract state, you will need to call `signAndSend()` on the returned object.\n*/\n    play = async ({ prediction }, options = {}) => {\n        return await AssembledTransaction.fromSimulation({\n            method: 'play',\n            args: this.spec.funcArgsToScVals(\"play\", { prediction }),\n            ...options,\n            ...this.options,\n            errorTypes: Errors,\n            parseResultXdr: this.parsers['play'],\n        });\n    };\n}\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,aAAa;AAC1C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,oBAAoB,QAAQ,mBAAmB;AACxD,cAAc,mBAAmB;AACjC,cAAc,qBAAqB;AACnC,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;EAC/B;EACAA,MAAM,CAACF,MAAM,GAAGE,MAAM,CAACF,MAAM,IAAIA,MAAM;AAC3C;AACA,OAAO,MAAMG,QAAQ,GAAG;EACpBC,SAAS,EAAE;IACPC,iBAAiB,EAAE,wCAAwC;IAC3DC,UAAU,EAAE;EAChB;AACJ,CAAC;AACD;AACA;AACA;AACA,OAAO,MAAMC,MAAM,GAAG,CAAC,CAAC;AACxB,OAAO,MAAMC,QAAQ,CAAC;EAGlBC,WAAWA,CAACC,QAAO,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA,kBAMX;MACNC,IAAI,EAAGC,MAAM,IAAK,IAAI,CAACC,IAAI,CAACC,eAAe,CAAC,MAAM,EAAEF,MAAM;IAC9D,CAAC;IAAAF,eAAA,qBACaK,IAAI,IAAK;MACnB,MAAM;QAAEC,MAAM;QAAE,GAAGC;MAAG,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;MAC1C,OAAOhB,oBAAoB,CAACqB,QAAQ,CAAC;QACjC,GAAG,IAAI,CAACZ,OAAO;QACfQ,MAAM;QACNK,cAAc,EAAE,IAAI,CAACC,OAAO,CAACN,MAAM;MACvC,CAAC,EAAEC,EAAE,CAAC;IACV,CAAC;IAAAP,eAAA,mBACU;MACPC,IAAI,EAAG,IAAI,CAACY;IAChB,CAAC;IACD;AACJ;AACA;IAFIb,eAAA,eAGO,gBAAAc,IAAA,EAAwC;MAAA,IAAjC;QAAEC;MAAW,CAAC,GAAAD,IAAA;MAAA,IAAEhB,OAAO,GAAAkB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;MACtC,OAAO,MAAM3B,oBAAoB,CAAC8B,cAAc,CAAC;QAC7Cb,MAAM,EAAE,MAAM;QACdc,IAAI,EAAErB,KAAI,CAACI,IAAI,CAACkB,gBAAgB,CAAC,MAAM,EAAE;UAAEN;QAAW,CAAC,CAAC;QACxD,GAAGjB,OAAO;QACV,GAAGC,KAAI,CAACD,OAAO;QACfwB,UAAU,EAAE3B,MAAM;QAClBgB,cAAc,EAAEZ,KAAI,CAACa,OAAO,CAAC,MAAM;MACvC,CAAC,CAAC;IACN,CAAC;IA/BG,IAAI,CAACd,OAAO,GAAGA,QAAO;IACtB,IAAI,CAACK,IAAI,GAAG,IAAIhB,YAAY,CAAC,CACzB,8EAA8E,CACjF,CAAC;EACN;AA4BJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}