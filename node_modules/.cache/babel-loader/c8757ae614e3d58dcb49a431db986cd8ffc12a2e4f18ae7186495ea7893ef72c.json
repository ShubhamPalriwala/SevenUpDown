{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/seven-up-seven-down/src/Game.js\";\nimport { Contract, networks } from \"seven-up-seven-down\";\nimport { isConnected, getPublicKey } from \"@stellar/freighter-api\";\n// import { isConnected, getPublicKey } from \"@stellar/freighter-api\";\n\n// Get the user's public key, if Freigher is installed.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet addressLookup = (async () => {\n  if (await isConnected()) return getPublicKey();\n})();\nlet address;\n\n// Returning the same object identity every time avoids unnecessary re-renders\nconst addressObject = {\n  address: \"\",\n  displayName: \"\"\n};\nexport const Game = async () => {\n  const tracker = new Contract({\n    contractId: networks.futurenet.contractId,\n    networkPassphrase: networks.futurenet.networkPassphrase,\n    rpcUrl: \"https://rpc-futurenet.stellar.org/\"\n  });\n  console.log(\"tracker conn\");\n  const result = await tracker.play({\n    prediction: \"up\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"text-gradient\",\n        children: await result.getPublicKey()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["Contract","networks","isConnected","getPublicKey","jsxDEV","_jsxDEV","Fragment","_Fragment","addressLookup","address","addressObject","displayName","Game","tracker","contractId","futurenet","networkPassphrase","rpcUrl","console","log","result","play","prediction","children","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shubham/Desktop/seven-up-seven-down/src/Game.js"],"sourcesContent":["import { Contract, networks } from \"seven-up-seven-down\";\nimport { isConnected, getPublicKey } from \"@stellar/freighter-api\";\n// import { isConnected, getPublicKey } from \"@stellar/freighter-api\";\n\n// Get the user's public key, if Freigher is installed.\nlet addressLookup = (async () => {\n  if (await isConnected()) return getPublicKey();\n})();\n\nlet address;\n\n// Returning the same object identity every time avoids unnecessary re-renders\nconst addressObject = {\n  address: \"\",\n  displayName: \"\",\n};\n\nexport const Game = async () => {\n  const tracker = new Contract({\n    contractId: networks.futurenet.contractId,\n    networkPassphrase: networks.futurenet.networkPassphrase,\n    rpcUrl: \"https://rpc-futurenet.stellar.org/\",\n  });\n  console.log(\"tracker conn\");\n  const result = await tracker.play({ prediction: \"up\" });\n\n  return (\n    <>\n      <h1>\n        <span class=\"text-gradient\">{await result.getPublicKey()}</span>\n      </h1>\n    </>\n  );\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,qBAAqB;AACxD,SAASC,WAAW,EAAEC,YAAY,QAAQ,wBAAwB;AAClE;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,IAAIC,aAAa,GAAG,CAAC,YAAY;EAC/B,IAAI,MAAMN,WAAW,CAAC,CAAC,EAAE,OAAOC,YAAY,CAAC,CAAC;AAChD,CAAC,EAAE,CAAC;AAEJ,IAAIM,OAAO;;AAEX;AACA,MAAMC,aAAa,GAAG;EACpBD,OAAO,EAAE,EAAE;EACXE,WAAW,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,IAAI,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMC,OAAO,GAAG,IAAIb,QAAQ,CAAC;IAC3Bc,UAAU,EAAEb,QAAQ,CAACc,SAAS,CAACD,UAAU;IACzCE,iBAAiB,EAAEf,QAAQ,CAACc,SAAS,CAACC,iBAAiB;IACvDC,MAAM,EAAE;EACV,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAC3B,MAAMC,MAAM,GAAG,MAAMP,OAAO,CAACQ,IAAI,CAAC;IAAEC,UAAU,EAAE;EAAK,CAAC,CAAC;EAEvD,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAMmB,KAAK,EAAC,eAAe;QAAAD,QAAA,EAAE,MAAMH,MAAM,CAACjB,YAAY,CAAC;MAAC;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D;EAAC,gBACL,CAAC;AAEP,CAAC;AAACC,EAAA,GAhBWjB,IAAI;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}