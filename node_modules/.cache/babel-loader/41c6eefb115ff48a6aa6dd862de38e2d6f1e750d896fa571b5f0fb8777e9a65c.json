{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/seven-up-seven-down/src/Game.js\",\n  _s = $RefreshSig$();\nimport { Contract, networks } from \"seven-up-seven-down\";\nimport React, { useEffect, useState } from \"react\";\nimport { greenColor, redColor, secondaryColor, textColor, primaryColor } from \"./colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Game = ({\n  input,\n  loading,\n  setLoading\n}) => {\n  _s();\n  const upOrDown = new Contract({\n    contractId: networks.futurenet.contractId,\n    networkPassphrase: networks.futurenet.networkPassphrase,\n    rpcUrl: \"https://rpc-futurenet.stellar.org/\"\n  });\n  const [gambled, setGambled] = useState(null);\n  useEffect(() => {\n    if (input) {\n      setLoading(true);\n      upOrDown.play({\n        prediction: input\n      }).then(result => {\n        setGambled(result.result.join(\" \"));\n      }).catch(error => {\n        console.error(\"Error playing game:\", error);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n  }, [input, setLoading]);\n  const renderGameResult = () => {\n    if (!gambled) return null;\n    const parts = gambled.split(\" \");\n    const [firstWord, resultWord,,,,,, number] = parts;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: textColor\n        },\n        children: firstWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: resultWord === \"lost\" ? redColor : greenColor\n        },\n        children: resultWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: textColor\n        },\n        children: parts.slice(2, 7).join(\" \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: resultWord === \"won\" ? secondaryColor : primaryColor\n        },\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n    return gambled;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6 text-center\",\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-semibold\",\n      children: renderGameResult()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"lI42xPXz+2wJI7MyhjhsRP9B2pQ=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["Contract","networks","React","useEffect","useState","greenColor","redColor","secondaryColor","textColor","primaryColor","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","input","loading","setLoading","_s","upOrDown","contractId","futurenet","networkPassphrase","rpcUrl","gambled","setGambled","play","prediction","then","result","join","catch","error","console","finally","renderGameResult","parts","split","firstWord","resultWord","number","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","slice","className","_c","$RefreshReg$"],"sources":["/home/shubham/Desktop/seven-up-seven-down/src/Game.js"],"sourcesContent":["import { Contract, networks } from \"seven-up-seven-down\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  greenColor,\n  redColor,\n  secondaryColor,\n  textColor,\n  primaryColor,\n} from \"./colors\";\n\nexport const Game = ({ input, loading, setLoading }) => {\n  const upOrDown = new Contract({\n    contractId: networks.futurenet.contractId,\n    networkPassphrase: networks.futurenet.networkPassphrase,\n    rpcUrl: \"https://rpc-futurenet.stellar.org/\",\n  });\n\n  const [gambled, setGambled] = useState(null);\n\n  useEffect(() => {\n    if (input) {\n      setLoading(true);\n      upOrDown\n        .play({ prediction: input })\n        .then((result) => {\n          setGambled(result.result.join(\" \"));\n        })\n        .catch((error) => {\n          console.error(\"Error playing game:\", error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }, [input, setLoading]);\n\n  const renderGameResult = () => {\n    if (!gambled) return null;\n\n    const parts = gambled.split(\" \");\n    const [firstWord, resultWord, , , , , , number] = parts;\n\n    return (\n      <>\n        <span style={{ color: textColor }}>{firstWord}</span>{\" \"}\n        <span style={{ color: resultWord === \"lost\" ? redColor : greenColor }}>\n          {resultWord}\n        </span>{\" \"}\n        <span style={{ color: textColor }}>{parts.slice(2, 7).join(\" \")}</span>{\" \"}\n        <span\n          style={{\n            color: resultWord === \"won\" ? secondaryColor : primaryColor,\n          }}\n        >\n          {number}\n        </span>\n      </>\n    );\n\n    return gambled;\n  };\n\n  return (\n    <div className=\"mt-6 text-center\">\n      {loading && <div className=\"text-center\">Loading...</div>}\n      <h1 className=\"text-2xl font-semibold\">{renderGameResult()}</h1>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}